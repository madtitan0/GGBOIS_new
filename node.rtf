{\rtf1\ansi\ansicpg1252\cocoartf2812
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <ESP8266WiFi.h>\
\
// Replace with your network credentials\
const char* ssid = "YOUR_SSID";\
const char* password = "YOUR_PASSWORD";\
\
// Define pins for ECG and EMG sensors\
const int ecgPin = D1; // ECG sensor output pin\
const int emgPin = D2; // EMG sensor output pin\
\
WiFiServer server(80);\
\
void setup() \{\
    Serial.begin(115200);\
    pinMode(ecgPin, INPUT);\
    pinMode(emgPin, INPUT);\
\
    // Connect to Wi-Fi\
    WiFi.begin(ssid, password);\
    while (WiFi.status() != WL_CONNECTED) \{\
        delay(1000);\
        Serial.println("Connecting to WiFi...");\
    \}\
    Serial.println("Connected to WiFi");\
    \
    // Start the server\
    server.begin();\
\}\
\
void loop() \{\
    // Check for clients\
    WiFiClient client = server.available();\
    if (client) \{\
        String currentLine = "";\
        while (client.connected()) \{\
            if (client.available()) \{\
                char c = client.read();\
                Serial.write(c);\
                if (c == '\\n') \{\
                    // Send HTML response\
                    client.println("HTTP/1.1 200 OK");\
                    client.println("Content-type:text/html");\
                    client.println();\
                    client.println("<!DOCTYPE HTML>");\
                    client.println("<html>");\
                    \
                    // Read values from ECG and EMG sensors\
                    int ecgValue = analogRead(ecgPin);\
                    int emgValue = analogRead(emgPin);\
                    \
                    // Send JavaScript and Chart.js library\
                    client.println("<script src='https://cdn.jsdelivr.net/npm/chart.js'></script>");\
                    client.println("<canvas id='myChart' width='400' height='200'></canvas>");\
                    client.println("<script>");\
                    client.println("var ctx = document.getElementById('myChart').getContext('2d');");\
                    client.println("var myChart = new Chart(ctx, \{");\
                    client.println("type: 'line',");\
                    client.println("data: \{");\
                    client.println("labels: ['ECG', 'EMG'],");\
                    client.println("datasets: [\{");\
                    client.println("label: 'Sensor Values',");\
                    client.print("data: [" + String(ecgValue) + ", " + String(emgValue) + "],");\
                    client.println("backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(255, 99, 132, 0.2)'],");\
                    client.println("borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],");\
                    client.println("borderWidth: 1");\
                    client.println("\}]");\
                    client.println("\},");\
                    client.println("options: \{ scales: \{ y: \{ beginAtZero: true \} \} \}");\
                    client.println("\});");\
                    client.println("</script>");\
                    \
                    client.println("</html>");\
                    \
                    break;\
                \}\
            \}\
        \}\
        delay(1);\
        client.stop();\
    \}\
\}}